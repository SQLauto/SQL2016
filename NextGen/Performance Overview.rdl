<?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSets>
    <DataSet Name="Performance">
      <SharedDataSet>
        <SharedDataSetReference>PerformanceHistorySummary</SharedDataSetReference>
      </SharedDataSet>
      <Fields>
        <Field Name="xsi">
          <DataField>xsi</DataField>
          <rd:TypeName>System.String</rd:TypeName>
        </Field>
        <Field Name="ClassificationMemberName">
          <DataField>ClassificationMemberName</DataField>
          <rd:TypeName>System.String</rd:TypeName>
        </Field>
        <Field Name="ClassificationMemberOrder">
          <DataField>ClassificationMemberOrder</DataField>
          <rd:TypeName>System.Int32</rd:TypeName>
        </Field>
        <Field Name="Latest3MonthTWR">
          <DataField>Latest3MonthTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="InceptionToDateAnnualizedTWR">
          <DataField>InceptionToDateAnnualizedTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="Latest10YearsAnnualizedTWR">
          <DataField>Latest10YearsAnnualizedTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="Latest1YearTWR">
          <DataField>Latest1YearTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="Latest3YearsAnnualizedTWR">
          <DataField>Latest3YearsAnnualizedTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="Latest5YearsAnnualizedTWR">
          <DataField>Latest5YearsAnnualizedTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="MonthToDateTWR">
          <DataField>MonthToDateTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="QuarterToDateTWR">
          <DataField>QuarterToDateTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
        <Field Name="YearToDateTWR">
          <DataField>YearToDateTWR</DataField>
          <rd:TypeName>System.Double</rd:TypeName>
        </Field>
      </Fields>
    </DataSet>
    <DataSet Name="StyleSheet">
      <SharedDataSet>
        <SharedDataSetReference>StyleSheet</SharedDataSetReference>
      </SharedDataSet>
      <Fields>
        <Field Name="StyleSheetXML">
          <DataField>StyleSheetXML</DataField>
          <rd:TypeName>System.String</rd:TypeName>
        </Field>
      </Fields>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>0.5in</Height>
        <Style />
      </Body>
      <Width>5in</Width>
      <Page>
        <LeftMargin>1in</LeftMargin>
        <RightMargin>1in</RightMargin>
        <TopMargin>1in</TopMargin>
        <BottomMargin>1in</BottomMargin>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <ReportParameters>
    <ReportParameter Name="StyleSheetXML">
      <DataType>String</DataType>
      <DefaultValue>
        <DataSetReference>
          <DataSetName>StyleSheet</DataSetName>
          <ValueField>StyleSheetXML</ValueField>
        </DataSetReference>
      </DefaultValue>
      <Hidden>true</Hidden>
    </ReportParameter>
  </ReportParameters>
  <Code>
		Dim StyleSheetHash As System.Collections.Hashtable

		Public Function InitStyleSheet()

		Dim xmlDocument As System.Xml.XmlDocument = New System.Xml.XmlDocument()
		xmlDocument.LoadXml(Report.Parameters!StyleSheetXML.Value)
		Dim rootNode As System.Xml.XmlElement = xmlDocument.SelectSingleNode("StyleSheetInfo")

		StyleSheetHash = New System.Collections.Hashtable()

		For Each a As System.Xml.XmlAttribute In rootNode.Attributes
		StyleSheetHash.Add(a.Name, a.Value)
		Next

		End Function

		Public Function StyleSheetValue(StyleSheetValueName As String) As String

		If (styleSheetHash Is Nothing)
		InitStyleSheet()
		End If

		If (StyleSheetHash.ContainsKey(StyleSheetValueName))
		Return StyleSheetHash(StyleSheetValueName)
		End If

		Return Nothing

		End Function

Private ColorCount As Integer = 0
Private ColorMapping As New System.Collections.Hashtable()
Private Colors() As String = nothing

Public Function GetColor(ByVal groupingValue As String, ByVal delimitedColors As String) As String
    ' 1. If the mapping already exists, then just return the mapped color.
    If ColorMapping.ContainsKey(groupingValue) Then Return ColorMapping(groupingValue)

    ' 2. Create the ColorPaletteColors() if they do not already exist.
    If Colors Is Nothing Then Colors = delimitedColors.Split(New Char() {","c}, StringSplitOptions.RemoveEmptyEntries)

    ' 3. Add the new color to the mapping.
    Dim color As String = Colors(ColorCount Mod Colors.Length)
    ColorCount = ColorCount + 1
    ColorMapping.Add(groupingValue, color)

    ' 4. Return the new color.
    Return color
End Function
</Code>
  <Language>en-US</Language>
  <CodeModules>
    <CodeModule>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</CodeModule>
  </CodeModules>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
  <rd:ReportID>d733e5ed-aa46-4e67-b8bf-468ce4749f46</rd:ReportID>
</Report>